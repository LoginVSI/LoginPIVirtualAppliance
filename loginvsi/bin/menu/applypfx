#!/bin/bash
composefilepath=$(grep "COMPOSEFILE=" < /loginvsi/.env | cut -d "=" -f2)
while :
do 
    read -erp "Please enter the path to the pfx file: " pfxpath
    if [ -s "$pfxpath" ]; then
        break
    fi
done
read -ersp "Please enter a the password for $pfxpath: " password

if [ -z "$password" ]; then
    echo "No password supplied, unable to continue"
    exit 1
fi
if [ -s "$pfxpath" ]; then
    openssl pkcs12 -in "$pfxpath" -out /certificates/cert.crt -nokeys -passin pass:$password || (echo "Error occured during conversion of pfx to crt, probably incorrect password" && exit 1)
    openssl pkcs12 -in "$pfxpath" -out /certificates/cert.key -nocerts -passin pass:$password -passout pass:$password || (echo "Error occured during conversion of pfx to crt, probably incorrect password" && exit 1)

    # replace the paths in the .env file
    sed -i '/SSL_CERTIFICATE_KEY_PATH=/d' /loginvsi/.env
    sed -i '/SSL_CERTIFICATE_PATH=/d' /loginvsi/.env   
    echo "SSL_CERTIFICATE_KEY_PATH=/certificates/cert.key" >>/loginvsi/.env
    echo "SSL_CERTIFICATE_PATH=/certificates/cert.crt" >>/loginvsi/.env

    # Remove CA.crt because we only need it in case of self-signed certificates
    [ -f /certificates/CA.crt ] && rm /certificates/CA.crt


    # Remove and recreate the secrets
    docker service rm VSI_gateway &>/dev/null
    docker secret rm VSI_SSL_CERTIFICATE_KEY_PASSWORD &>/dev/null
    docker secret rm VSI_VSI_SSL_CERTIFICATE &>/dev/null
    docker secret rm VSI_VSI_SSL_CERTIFICATE_KEY &>/dev/null
    echo $password | docker secret create VSI_SSL_CERTIFICATE_KEY_PASSWORD - &>/dev/null
    
    /usr/bin/loginvsid start

    for serviceID in $(docker service ls -q);
    do 
        docker service update --env-add SystemConfiguration__AllowUntrustedCertificates="false" $serviceID
    done 
    sed -i 's,SystemConfiguration__AllowUntrustedCertificates: "true",SystemConfiguration__AllowUntrustedCertificates: "false",g' $composefilepath
else    
    echo "Could not find valid certificate at $pfxpath"
fi

