#!/bin/bash
envfilepath="$1"
composefilepath=$(grep "COMPOSEFILE=" < /loginvsi/.env | cut -d "=" -f2)
if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi



fqdn=$(hostname).$(domainname)

#Generate random password and new self-signed certs
cert_password=$(openssl rand -hex 32)
/loginvsi/bin/shared/sslgen -c=NL -s=Noord-Holland -l=Amsterdam -o="Login VSI B.V." -u=Development -n=${fqdn} -e=info@loginvsi.com -d=999999 -w=$cert_password -p=/certificates/

# replace the paths in the .env file
sed -i '/SSL_CERTIFICATE_KEY_PATH=/d' $envfilepath
sed -i '/SSL_CERTIFICATE_PATH=/d' $envfilepath   
echo "SSL_CERTIFICATE_KEY_PATH=/certificates/${fqdn}.key" >>$envfilepath
echo "SSL_CERTIFICATE_PATH=/certificates/${fqdn}.crt" >>$envfilepath

# switch to unsecure mode
if [ $(docker service ls -q -f name=VSI_systemconfiguration | wc -l) -gt 0 ]; then
    docker service --env-add SystemConfiguration__AllowUntrustedCertificates="true" VSI_systemconfiguration
    docker service update --env-add SystemConfiguration__AllowUntrustedCertificates="true" VSI_sessionlogonscripts
    sed -i 's,SystemConfiguration__AllowUntrustedCertificates: "false",SystemConfiguration__AllowUntrustedCertificates: "true",g' $composefilepath
fi  


# Remove and recreate the secrets
docker service rm VSI_gateway &>/dev/null
docker secret rm VSI_SSL_CERTIFICATE_KEY_PASSWORD &>/dev/null
docker secret rm VSI_VSI_SSL_CERTIFICATE &>/dev/null
docker secret rm VSI_VSI_SSL_CERTIFICATE_KEY &>/dev/null

echo $cert_password | docker secret create VSI_SSL_CERTIFICATE_KEY_PASSWORD - &>/dev/null

# restart gateway using the start command
/usr/bin/loginvsid start
